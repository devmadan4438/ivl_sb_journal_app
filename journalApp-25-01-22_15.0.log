25-01-22 15:21:09 [main] INFO   c.l.journal.JournalApplication --> Starting JournalApplication using Java 17.0.12 with PID 12756 (C:\Workspace\code\learning\journal\target\classes started by MADAN MOHAN in C:\Workspace\code\learning\journal) 
25-01-22 15:21:09 [main] INFO   c.l.journal.JournalApplication --> The following 1 profile is active: "dev" 
25-01-22 15:21:10 [main] INFO   o.s.d.r.c.RepositoryConfigurationDelegate --> Multiple Spring Data modules found, entering strict repository configuration mode 
25-01-22 15:21:10 [main] INFO   o.s.d.r.c.RepositoryConfigurationDelegate --> Bootstrapping Spring Data MongoDB repositories in DEFAULT mode. 
25-01-22 15:21:10 [main] INFO   o.s.d.r.c.RepositoryConfigurationDelegate --> Finished Spring Data repository scanning in 219 ms. Found 2 MongoDB repository interfaces. 
25-01-22 15:21:10 [main] INFO   o.s.d.r.c.RepositoryConfigurationDelegate --> Multiple Spring Data modules found, entering strict repository configuration mode 
25-01-22 15:21:10 [main] INFO   o.s.d.r.c.RepositoryConfigurationDelegate --> Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
25-01-22 15:21:10 [main] INFO   o.s.d.r.c.RepositoryConfigurationExtensionSupport --> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.journal.repositories.JournalRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
25-01-22 15:21:10 [main] INFO   o.s.d.r.c.RepositoryConfigurationExtensionSupport --> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.journal.repositories.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
25-01-22 15:21:10 [main] INFO   o.s.d.r.c.RepositoryConfigurationDelegate --> Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces. 
25-01-22 15:21:11 [main] INFO   o.s.b.w.e.tomcat.TomcatWebServer --> Tomcat initialized with port 8080 (http) 
25-01-22 15:21:12 [main] INFO   o.a.coyote.http11.Http11NioProtocol --> Initializing ProtocolHandler ["http-nio-8080"] 
25-01-22 15:21:12 [main] INFO   o.a.catalina.core.StandardService --> Starting service [Tomcat] 
25-01-22 15:21:12 [main] INFO   o.a.catalina.core.StandardEngine --> Starting Servlet engine: [Apache Tomcat/10.1.33] 
25-01-22 15:21:12 [main] INFO   o.a.c.c.C.[Tomcat].[localhost].[/] --> Initializing Spring embedded WebApplicationContext 
25-01-22 15:21:12 [main] INFO   o.s.b.w.s.c.ServletWebServerApplicationContext --> Root WebApplicationContext: initialization completed in 2527 ms 
25-01-22 15:21:15 [main] INFO   org.mongodb.driver.client --> MongoClient with metadata {"application": {"name": "Cluster0"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/17.0.12+8-LTS-286"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='madan', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@76563ae7, com.mongodb.Jep395RecordCodecProvider@4fd74223, com.mongodb.KotlinCodecProvider@4fea840f]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.w1nis.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-tp87g7-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='Cluster0', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null} 
25-01-22 15:21:15 [main] INFO   org.mongodb.driver.cluster --> Waiting for server to become available for operation with ID 2. Remaining time: 29957 ms. Selector: WritableServerSelector, topology description: {type=UNKNOWN, servers=[]. 
25-01-22 15:21:16 [cluster-ClusterId{value='6790bf939215d7589dda6c60', description='Cluster0'}-srv-cluster0.w1nis.mongodb.net] INFO   org.mongodb.driver.cluster --> Adding discovered server cluster0-shard-00-00.w1nis.mongodb.net:27017 to client view of cluster 
25-01-22 15:21:16 [cluster-ClusterId{value='6790bf939215d7589dda6c60', description='Cluster0'}-srv-cluster0.w1nis.mongodb.net] INFO   org.mongodb.driver.cluster --> Adding discovered server cluster0-shard-00-02.w1nis.mongodb.net:27017 to client view of cluster 
25-01-22 15:21:16 [cluster-ClusterId{value='6790bf939215d7589dda6c60', description='Cluster0'}-srv-cluster0.w1nis.mongodb.net] INFO   org.mongodb.driver.cluster --> Adding discovered server cluster0-shard-00-01.w1nis.mongodb.net:27017 to client view of cluster 
25-01-22 15:21:18 [cluster-ClusterId{value='6790bf939215d7589dda6c60', description='Cluster0'}-cluster0-shard-00-00.w1nis.mongodb.net:27017] INFO   org.mongodb.driver.cluster --> Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.w1nis.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=848847700, minRoundTripTimeNanos=0, setName='atlas-tp87g7-shard-0', canonicalAddress=cluster0-shard-00-00.w1nis.mongodb.net:27017, hosts=[cluster0-shard-00-00.w1nis.mongodb.net:27017, cluster0-shard-00-01.w1nis.mongodb.net:27017, cluster0-shard-00-02.w1nis.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.w1nis.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=245, topologyVersion=TopologyVersion{processId=6790a99431ba5e88c960e3e0, counter=4}, lastWriteDate=Wed Jan 22 15:21:17 IST 2025, lastUpdateTimeNanos=150530291222300} 
25-01-22 15:21:18 [cluster-ClusterId{value='6790bf939215d7589dda6c60', description='Cluster0'}-cluster0-shard-00-01.w1nis.mongodb.net:27017] INFO   org.mongodb.driver.cluster --> Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.w1nis.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=866917000, minRoundTripTimeNanos=0, setName='atlas-tp87g7-shard-0', canonicalAddress=cluster0-shard-00-01.w1nis.mongodb.net:27017, hosts=[cluster0-shard-00-00.w1nis.mongodb.net:27017, cluster0-shard-00-01.w1nis.mongodb.net:27017, cluster0-shard-00-02.w1nis.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.w1nis.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=245, topologyVersion=TopologyVersion{processId=6790aae75ae442b6979ff27b, counter=3}, lastWriteDate=Wed Jan 22 15:21:17 IST 2025, lastUpdateTimeNanos=150530291234700} 
25-01-22 15:21:19 [cluster-ClusterId{value='6790bf939215d7589dda6c60', description='Cluster0'}-cluster0-shard-00-02.w1nis.mongodb.net:27017] INFO   org.mongodb.driver.cluster --> Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.w1nis.mongodb.net:27017, type=REPLICA_SET_PRIMARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=223339800, minRoundTripTimeNanos=0, setName='atlas-tp87g7-shard-0', canonicalAddress=cluster0-shard-00-02.w1nis.mongodb.net:27017, hosts=[cluster0-shard-00-00.w1nis.mongodb.net:27017, cluster0-shard-00-01.w1nis.mongodb.net:27017, cluster0-shard-00-02.w1nis.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.w1nis.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff00000000000000d5, setVersion=245, topologyVersion=TopologyVersion{processId=6790a8b3e8a416ef5eadcea4, counter=6}, lastWriteDate=Wed Jan 22 15:21:18 IST 2025, lastUpdateTimeNanos=150531444251200} 
25-01-22 15:21:19 [cluster-ClusterId{value='6790bf939215d7589dda6c60', description='Cluster0'}-cluster0-shard-00-02.w1nis.mongodb.net:27017] INFO   org.mongodb.driver.cluster --> Discovered replica set primary cluster0-shard-00-02.w1nis.mongodb.net:27017 with max election id 7fffffff00000000000000d5 and max set version 245 
25-01-22 15:21:21 [main] INFO   o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer --> Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider 
25-01-22 15:21:21 [main] WARN   o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer --> Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR 
25-01-22 15:21:25 [main] INFO   o.a.coyote.http11.Http11NioProtocol --> Starting ProtocolHandler ["http-nio-8080"] 
25-01-22 15:21:25 [main] INFO   o.s.b.w.e.tomcat.TomcatWebServer --> Tomcat started on port 8080 (http) with context path '/' 
25-01-22 15:21:25 [main] INFO   c.l.journal.JournalApplication --> Started JournalApplication in 16.837 seconds (process running for 17.89) 
25-01-22 15:21:36 [http-nio-8080-exec-1] INFO   o.a.c.c.C.[Tomcat].[localhost].[/] --> Initializing Spring DispatcherServlet 'dispatcherServlet' 
25-01-22 15:21:36 [http-nio-8080-exec-1] INFO   o.s.web.servlet.DispatcherServlet --> Initializing Servlet 'dispatcherServlet' 
25-01-22 15:21:36 [http-nio-8080-exec-1] INFO   o.s.web.servlet.DispatcherServlet --> Completed initialization in 4 ms 
25-01-22 15:23:42 [SpringApplicationShutdownHook] INFO   o.s.b.w.e.tomcat.GracefulShutdown --> Commencing graceful shutdown. Waiting for active requests to complete 
25-01-22 15:23:42 [tomcat-shutdown] INFO   o.s.b.w.e.tomcat.GracefulShutdown --> Graceful shutdown complete 
25-01-22 15:23:48 [main] INFO   c.l.journal.JournalApplication --> Starting JournalApplication using Java 17.0.12 with PID 16452 (C:\Workspace\code\learning\journal\target\classes started by MADAN MOHAN in C:\Workspace\code\learning\journal) 
25-01-22 15:23:48 [main] INFO   c.l.journal.JournalApplication --> The following 1 profile is active: "dev" 
25-01-22 15:23:49 [main] INFO   o.s.d.r.c.RepositoryConfigurationDelegate --> Multiple Spring Data modules found, entering strict repository configuration mode 
25-01-22 15:23:49 [main] INFO   o.s.d.r.c.RepositoryConfigurationDelegate --> Bootstrapping Spring Data MongoDB repositories in DEFAULT mode. 
25-01-22 15:23:49 [main] INFO   o.s.d.r.c.RepositoryConfigurationDelegate --> Finished Spring Data repository scanning in 250 ms. Found 2 MongoDB repository interfaces. 
25-01-22 15:23:49 [main] INFO   o.s.d.r.c.RepositoryConfigurationDelegate --> Multiple Spring Data modules found, entering strict repository configuration mode 
25-01-22 15:23:49 [main] INFO   o.s.d.r.c.RepositoryConfigurationDelegate --> Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
25-01-22 15:23:49 [main] INFO   o.s.d.r.c.RepositoryConfigurationExtensionSupport --> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.journal.repositories.JournalRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
25-01-22 15:23:49 [main] INFO   o.s.d.r.c.RepositoryConfigurationExtensionSupport --> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.journal.repositories.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
25-01-22 15:23:49 [main] INFO   o.s.d.r.c.RepositoryConfigurationDelegate --> Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces. 
25-01-22 15:23:50 [main] INFO   o.s.b.w.e.tomcat.TomcatWebServer --> Tomcat initialized with port 8080 (http) 
25-01-22 15:23:50 [main] INFO   o.a.coyote.http11.Http11NioProtocol --> Initializing ProtocolHandler ["http-nio-8080"] 
25-01-22 15:23:50 [main] INFO   o.a.catalina.core.StandardService --> Starting service [Tomcat] 
25-01-22 15:23:50 [main] INFO   o.a.catalina.core.StandardEngine --> Starting Servlet engine: [Apache Tomcat/10.1.33] 
25-01-22 15:23:50 [main] INFO   o.a.c.c.C.[Tomcat].[localhost].[/] --> Initializing Spring embedded WebApplicationContext 
25-01-22 15:23:50 [main] INFO   o.s.b.w.s.c.ServletWebServerApplicationContext --> Root WebApplicationContext: initialization completed in 2319 ms 
25-01-22 15:23:51 [main] INFO   org.mongodb.driver.client --> MongoClient with metadata {"application": {"name": "Cluster0"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/17.0.12+8-LTS-286"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='madan', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@67f946c3, com.mongodb.Jep395RecordCodecProvider@21b51e59, com.mongodb.KotlinCodecProvider@1785d194]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.w1nis.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-tp87g7-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='Cluster0', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null} 
25-01-22 15:23:52 [main] INFO   org.mongodb.driver.cluster --> Waiting for server to become available for operation with ID 2. Remaining time: 29986 ms. Selector: WritableServerSelector, topology description: {type=UNKNOWN, servers=[]. 
25-01-22 15:23:54 [cluster-ClusterId{value='6790c02fd061c66780dc771b', description='Cluster0'}-srv-cluster0.w1nis.mongodb.net] INFO   org.mongodb.driver.cluster --> Adding discovered server cluster0-shard-00-00.w1nis.mongodb.net:27017 to client view of cluster 
25-01-22 15:23:54 [cluster-ClusterId{value='6790c02fd061c66780dc771b', description='Cluster0'}-srv-cluster0.w1nis.mongodb.net] INFO   org.mongodb.driver.cluster --> Adding discovered server cluster0-shard-00-02.w1nis.mongodb.net:27017 to client view of cluster 
25-01-22 15:23:54 [cluster-ClusterId{value='6790c02fd061c66780dc771b', description='Cluster0'}-srv-cluster0.w1nis.mongodb.net] INFO   org.mongodb.driver.cluster --> Adding discovered server cluster0-shard-00-01.w1nis.mongodb.net:27017 to client view of cluster 
25-01-22 15:23:55 [cluster-ClusterId{value='6790c02fd061c66780dc771b', description='Cluster0'}-cluster0-shard-00-00.w1nis.mongodb.net:27017] INFO   org.mongodb.driver.cluster --> Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.w1nis.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=337759900, minRoundTripTimeNanos=0, setName='atlas-tp87g7-shard-0', canonicalAddress=cluster0-shard-00-00.w1nis.mongodb.net:27017, hosts=[cluster0-shard-00-00.w1nis.mongodb.net:27017, cluster0-shard-00-01.w1nis.mongodb.net:27017, cluster0-shard-00-02.w1nis.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.w1nis.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=245, topologyVersion=TopologyVersion{processId=6790a99431ba5e88c960e3e0, counter=4}, lastWriteDate=Wed Jan 22 15:23:54 IST 2025, lastUpdateTimeNanos=150686948746900} 
25-01-22 15:23:55 [cluster-ClusterId{value='6790c02fd061c66780dc771b', description='Cluster0'}-cluster0-shard-00-01.w1nis.mongodb.net:27017] INFO   org.mongodb.driver.cluster --> Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.w1nis.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=388527800, minRoundTripTimeNanos=0, setName='atlas-tp87g7-shard-0', canonicalAddress=cluster0-shard-00-01.w1nis.mongodb.net:27017, hosts=[cluster0-shard-00-00.w1nis.mongodb.net:27017, cluster0-shard-00-01.w1nis.mongodb.net:27017, cluster0-shard-00-02.w1nis.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.w1nis.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=245, topologyVersion=TopologyVersion{processId=6790aae75ae442b6979ff27b, counter=3}, lastWriteDate=Wed Jan 22 15:23:54 IST 2025, lastUpdateTimeNanos=150686948747000} 
25-01-22 15:23:55 [cluster-ClusterId{value='6790c02fd061c66780dc771b', description='Cluster0'}-cluster0-shard-00-02.w1nis.mongodb.net:27017] INFO   org.mongodb.driver.cluster --> Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.w1nis.mongodb.net:27017, type=REPLICA_SET_PRIMARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=421435100, minRoundTripTimeNanos=0, setName='atlas-tp87g7-shard-0', canonicalAddress=cluster0-shard-00-02.w1nis.mongodb.net:27017, hosts=[cluster0-shard-00-00.w1nis.mongodb.net:27017, cluster0-shard-00-01.w1nis.mongodb.net:27017, cluster0-shard-00-02.w1nis.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.w1nis.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff00000000000000d5, setVersion=245, topologyVersion=TopologyVersion{processId=6790a8b3e8a416ef5eadcea4, counter=6}, lastWriteDate=Wed Jan 22 15:23:54 IST 2025, lastUpdateTimeNanos=150686948747000} 
25-01-22 15:23:55 [cluster-ClusterId{value='6790c02fd061c66780dc771b', description='Cluster0'}-cluster0-shard-00-02.w1nis.mongodb.net:27017] INFO   org.mongodb.driver.cluster --> Discovered replica set primary cluster0-shard-00-02.w1nis.mongodb.net:27017 with max election id 7fffffff00000000000000d5 and max set version 245 
25-01-22 15:23:56 [main] INFO   o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer --> Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider 
25-01-22 15:23:56 [main] WARN   o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer --> Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR 
25-01-22 15:23:57 [main] INFO   o.a.coyote.http11.Http11NioProtocol --> Starting ProtocolHandler ["http-nio-8080"] 
25-01-22 15:23:57 [main] INFO   o.s.b.w.e.tomcat.TomcatWebServer --> Tomcat started on port 8080 (http) with context path '/' 
25-01-22 15:23:57 [main] INFO   c.l.journal.JournalApplication --> Started JournalApplication in 9.898 seconds (process running for 10.843) 
25-01-22 15:23:59 [http-nio-8080-exec-1] INFO   o.a.c.c.C.[Tomcat].[localhost].[/] --> Initializing Spring DispatcherServlet 'dispatcherServlet' 
25-01-22 15:23:59 [http-nio-8080-exec-1] INFO   o.s.web.servlet.DispatcherServlet --> Initializing Servlet 'dispatcherServlet' 
25-01-22 15:23:59 [http-nio-8080-exec-1] INFO   o.s.web.servlet.DispatcherServlet --> Completed initialization in 1 ms 
25-01-22 15:26:24 [http-nio-8080-exec-5] ERROR  c.l.j.controllers.publicController --> Exception occurred while authentication 
org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:141)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at com.learning.journal.controllers.publicController.login(publicController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
